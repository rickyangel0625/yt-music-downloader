@echo off
:: 設定字元編碼為 UTF-8，以正確處理特殊字元檔名
chcp 65001 > nul
:: 啟用延遲變數擴充，以便在迴圈或條件判斷中使用變數
setlocal enabledelayedexpansion

echo -----------------------------------------------------------------------------
echo YouTube 音樂下載助手 - 批次檔版本
echo -----------------------------------------------------------------------------
echo 提示：在執行此程式前，請確保以下執行檔已下載並放置在此批次檔的相同資料夾內：
echo.
echo 1. yt-dlp.exe (用於下載 YouTube 影片音訊)
echo    下載連結: https://github.com/yt-dlp/yt-dlp/releases
echo    請下載 Assets 區塊下的 "yt-dlp.exe"
echo.
echo 2. FFmpeg 工具包 (包含 ffmpeg.exe 和 ffprobe.exe，用於音訊轉換)
echo    下載連結: https://www.ffmpeg.org/download.html
echo    點擊綠色 Windows 圖示，然後選擇其中一個下載連結 (例如 gyan.dev 或 BtbN)，
echo    下載解壓縮後，取得 bin 資料夾內的 "ffmpeg.exe" 和 "ffprobe.exe"。
echo.
pause
cls

:: -----------------------------------------------------------------------------
:: 步驟 1: 檢查必要的執行檔是否存在
:: -----------------------------------------------------------------------------

:: 檢查 yt-dlp.exe 是否存在
if not exist "yt-dlp.exe" (
    echo 錯誤：yt-dlp.exe 未找到。請將 yt-dlp.exe 放在與此批次檔相同的目錄中。
    pause
    exit /b 1
)
:: 檢查 ffmpeg.exe 是否存在
if not exist "ffmpeg.exe" (
    echo 錯誤：ffmpeg.exe 未找到。請將 ffmpeg.exe 放在與此批次檔相同的目錄中。
    pause
    exit /b 1
)
:: 檢查 ffprobe.exe 是否存在 (雖然此腳本沒有直接調用，但它是 FFmpeg 套件的一部分，確保其完整性)
if not exist "ffprobe.exe" (
    echo 警告：ffprobe.exe 未找到。yt-dlp 或 ffmpeg 的某些功能可能需要它。請檢查 FFmpeg 工具包。
    echo 如果您確定不需要 ffprobe.exe，可以忽略此警告。
    pause
)

:: -----------------------------------------------------------------------------
:: 設定檔案儲存路徑（下載資料夾）
:: -----------------------------------------------------------------------------
set "downloadFolder=%USERPROFILE%\Downloads"

:start_loop
cls
echo -----------------------------------------------------------------------------
echo YouTube 音樂下載助手 - 批次檔版本
echo -----------------------------------------------------------------------------
echo 提示：您可以隨時關閉此視窗來停止程式。
echo.

:: -----------------------------------------------------------------------------
:: 步驟 2: 取得使用者輸入的 YouTube 網址
:: -----------------------------------------------------------------------------

set /p "url=請貼上 YouTube 網址: "

:: -----------------------------------------------------------------------------
:: 步驟 3: 處理可能的空輸入 (使用者直接按 Enter)
:: -----------------------------------------------------------------------------
if "%url%"=="" (
    echo 沒有輸入網址，程式將重新等待輸入。
    timeout /t 2 /nobreak > nul
    goto start_loop
)

echo.
echo -----------------------------------------------------------------------------
echo 正在下載音訊...
echo -----------------------------------------------------------------------------
:: -----------------------------------------------------------------------------
:: 步驟 4: 使用 yt-dlp 下載最佳音質的音訊
:: -----------------------------------------------------------------------------
:: -f "bestaudio"      : 下載最佳音訊格式
:: --no-playlist       : 即使網址是播放清單，也只下載單一影片
:: --no-cache          : 不使用快取
:: --paths "%downloadFolder%" : 指定下載路徑為下載資料夾
:: -o "%%(title)s.%%(ext)s" : 指定輸出檔名格式為「影片標題.副檔名」
yt-dlp.exe "%url%" ^
    -f "bestaudio" ^
    --no-playlist ^
    --no-cache ^
    --paths "%downloadFolder%" ^
    -o "%%(title)s.%%(ext)s"

:: 檢查 yt-dlp 是否成功執行
if %errorlevel% neq 0 (
    echo.
    echo 錯誤：音訊下載失敗。請檢查網址是否為 YouTube 連結或網路連線，然後再試一次。
    pause
    goto start_loop
)

echo.
echo -----------------------------------------------------------------------------
echo 下載完成。正在尋找最新檔案準備轉換...
echo -----------------------------------------------------------------------------
:: -----------------------------------------------------------------------------
:: 步驟 5: 尋找最新下載的 .webm 或 .m4a 檔案
:: -----------------------------------------------------------------------------
:: /a-d           : 只列出檔案，不列出目錄
:: /o-d           : 依修改日期由新到舊排序
:: /b             : 僅顯示檔名和副檔名
:: 2^>nul         : 隱藏錯誤訊息 (例如找不到檔案)
set "latestFile="
for /f "delims=" %%i in ('dir /b /a-d /o-d "%downloadFolder%\*.webm" "%downloadFolder%\*.m4a" 2^>nul') do (
    :: 只取得第一個 (最新的) 檔案
    if not defined latestFile (
        set "latestFile=%%i"
    )
)

if defined latestFile (
    echo 找到最新檔案: "%downloadFolder%\!latestFile!"

    :: 取得檔案名稱 (不含副檔名)
    set "baseName=!latestFile!"
    set "baseName=!baseName:.webm=!"
    set "baseName=!baseName:.m4a=!"
    set "outputFile=!downloadFolder!\!baseName!.mp3"

    echo.
    echo -----------------------------------------------------------------------------
    echo 正在轉換為 MP3 格式 (請稍候，這可能需要一些時間)...
    echo -----------------------------------------------------------------------------
    :: -----------------------------------------------------------------------------
    :: 步驟 6: 使用 ffmpeg 轉換為 MP3 格式
    :: -----------------------------------------------------------------------------
    :: -i           : 輸入檔案
    :: -vn          : 不包含視訊軌
    :: -ar 44100    : 設定音訊採樣率為 44.1 kHz
    :: -ac 2        : 設定音訊通道為立體聲
    :: -b:a 128k    : 設定音訊位元率為 128 kbps (標準音質)
    ffmpeg -i "%downloadFolder%\!latestFile!" -vn -ar 44100 -ac 2 -b:a 128k "!outputFile!"

    :: 檢查 ffmpeg 是否成功執行
    if %errorlevel% neq 0 (
        echo.
        echo 錯誤：音訊轉換失敗。
        pause
        goto start_loop
    )

    echo.
    echo -----------------------------------------------------------------------------
    echo 轉換完成: "!outputFile!"
    echo -----------------------------------------------------------------------------
    :: -----------------------------------------------------------------------------
    :: 步驟 7: 刪除原始的音訊檔案 (可選，已啟用)
    :: -----------------------------------------------------------------------------
    echo 正在刪除原始檔案: "%downloadFolder%\!latestFile!"
    del "%downloadFolder%\!latestFile!"

) else (
    echo.
    echo 錯誤：沒有找到可供轉換的 .webm 或 .m4a 檔案。下載可能失敗或檔案已被移動/刪除。
    pause
)

echo.
echo -----------------------------------------------------------------------------
echo 本次操作已完成。請繼續貼上網址以進行下一首下載。
echo -----------------------------------------------------------------------------
:: 直接跳回循環開頭，繼續等待下一首網址輸入，不再等待使用者按鍵
goto start_loop